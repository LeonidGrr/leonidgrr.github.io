{"version":3,"sources":["webpack:///./components/Loader/index.tsx","webpack:///../node_modules/classnames/index.js","webpack:///./components/Explore/Explore.module.css","webpack:///./routes/home/index.tsx","webpack:///./components/Header/index.tsx","webpack:///./components/Header/Header.module.css","webpack:///./components/Loader/Loader.module.css","webpack:///./components/Explore/index.tsx"],"names":["Loader","loaded","setLoaded","useState","progress","setProgress","useEffect","THREE","onLoad","setTimeout","onProgress","url","itemsLoaded","itemsTotal","className","classNames","css","for","id","max","value","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","hasOwn","call","join","hasOwnProperty","module","exports","default","titleMap","name","header","desc","sub","screen","Home","currentCamera","changeCamera","webGLAvailable","isEnabled","useContext","Context3D","route","onChangeCamera","tabIndex","Header","props","Explore","showContent","setShowContent","showDescription","setShowDescription","useRef","explore","type","onClick","e","stopPropagation","prev","description"],"mappings":"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","file":"route-home.chunk.03340.esm.js","sourcesContent":["import classNames from 'classnames';\r\nimport { useState, useEffect } from 'preact/hooks';\r\nimport * as THREE from 'three';\r\nimport css from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // THREE.DefaultLoadingManager.onStart = function(url, itemsLoaded, itemsTotal) {\r\n            // console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\r\n        // };\r\n    \r\n        THREE.DefaultLoadingManager.onLoad = function() {\r\n            // console.log('Loading Complete!');\r\n            setTimeout(() => setLoaded(true));\r\n        };\r\n        \r\n        THREE.DefaultLoadingManager.onProgress = function(url, itemsLoaded, itemsTotal) {\r\n            // console.log('Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\r\n            setProgress(itemsLoaded/itemsTotal * 100);\r\n        };\r\n        \r\n        // THREE.DefaultLoadingManager.onError = function(url) {\r\n            // console.log('There was an error loading ' + url);\r\n        // };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classNames(css['loader-wrapper'], loaded && css['fade-out'])}>\r\n            <div className={css['loader-progress']}>\r\n                <label for=\"loader\">Loading assets</label>\r\n                <progress id=\"loader\" max=\"100\" value={progress}></progress>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nexport default {\"explore\":\"explore__sC0To\",\"opacity_animation\":\"opacity_animation__cfcuz\",\"explore-separator\":\"explore-separator__YKfQ6\",\"width_animation\":\"width_animation__HFgqT\",\"content\":\"content__riTMf\",\"description\":\"description__rbxxy\",\"scenes\":\"scenes__zIShF\",\"content--show\":\"content--show__9TFrw\",\"description--show\":\"description--show__b0qzU\"};","import { FunctionComponent } from 'preact';\r\nimport { RoutableProps, route } from 'preact-router';\r\nimport { useContext, useEffect } from 'preact/hooks';\r\nimport { Context3D } from '../../components/Context3D';\r\nimport Explore from '../../components/Explore';\r\nimport Header from '../../components/Header';\r\nimport Loader from '../../components/Loader';\r\n\r\nexport type Config = {\r\n    name: string,\r\n    header: string,\r\n    desc: string,\r\n    sub: {[key: string]: {\r\n        name: string,\r\n        desc: string,\r\n    }},\r\n};\r\n\r\nconst titleMap: Config = {\r\n    name: 'My dev lair',\r\n    header: 'my dev lair',\r\n    desc: `Hello! My name is Leonid. I am just humble programmer trying to learn something in a spare time.\\n This is little demo page. Feel free to tap and click around. `,\r\n    sub: {\r\n        screen: {\r\n            name: 'Screen',\r\n            desc: 'For now this is just an example of THREEJS render target...',\r\n        },\r\n    },\r\n};\r\n\r\nconst Home: FunctionComponent<RoutableProps> = () => {\r\n\tconst { currentCamera, changeCamera, webGLAvailable, isEnabled } = useContext(Context3D);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!webGLAvailable && isEnabled) {\r\n\t\t\troute('/nowebgl', true);\r\n\t\t}\r\n\t}, [webGLAvailable, isEnabled]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header header={titleMap.header} />\r\n\t\t\t<Explore\r\n\t\t\t\tcurrentCamera={currentCamera}\r\n\t\t\t\tonChangeCamera={changeCamera}\r\n\t\t\t\ttitleMap={titleMap}\r\n\t\t\t/>\r\n\t\t\t{webGLAvailable && isEnabled && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t\t<canvas className=\"webgl\" tabIndex={1} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import css from './Header.module.css';\r\n\r\ntype HeaderProps = {\r\n    header: string,\r\n};\r\n\r\nconst Header = (props: HeaderProps) => {\r\n    const { header } = props;\r\n    return (\r\n        <header className={css.header}>\r\n            <h1>{header}</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header__pBWgD\",\"opacity_animation\":\"opacity_animation__piEyb\",\"width_animation\":\"width_animation__rwi1z\"};","// extracted by mini-css-extract-plugin\nexport default {\"loader-wrapper\":\"loader-wrapper__gLPZi\",\"fade-out\":\"fade-out__SuLAa\",\"loader-progress\":\"loader-progress__kID0V\"};","import {\r\n    useState,\r\n    useEffect,\r\n    useRef,\r\n} from 'preact/hooks';\r\nimport classNames from 'classnames';\r\nimport css from './Explore.module.css';\r\nimport { Config } from 'src/routes/home';\r\n\r\ntype ExplorePanelProps = {\r\n    onChangeCamera: (key: string) => void,\r\n    currentCamera: string,\r\n    titleMap: Config,\r\n}\r\n\r\nconst Explore = (props: ExplorePanelProps) => {\r\n    const {\r\n        onChangeCamera,\r\n        currentCamera,\r\n        titleMap,\r\n    } = props;\r\n    const [showContent, setShowContent] = useState(false);\r\n    const [showDescription, setShowDescription] = useState<string | null>(null);\r\n\r\n    const contentRef = useRef<null | HTMLDivElement>(null);\r\n    const isSmallScreen = () => {\r\n        if (contentRef.current) {\r\n            return contentRef.current.offsetWidth >= document.body.clientWidth / 2;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const handleCamera = (e: any) => {\r\n        e.stopPropagation();\r\n        const { key } = e.currentTarget.dataset;\r\n        if (key && currentCamera !== key) {\r\n            onChangeCamera(key);\r\n            if (isSmallScreen()) {\r\n                setShowContent(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleShowContent = (e: any) => {\r\n        e.stopPropagation();\r\n        setShowContent(prev => !prev);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setShowDescription(titleMap?.sub[currentCamera]?.desc\r\n        || titleMap?.desc);\r\n    }, [currentCamera]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                aria-label=\"Explore more\"\r\n                className={css.explore}\r\n            >\r\n                <div className={css['explore-separator']} />\r\n                <button type=\"button\" onClick={handleShowContent}>\r\n                    Explore more\r\n                </button>\r\n            </div>\r\n            {/* <div\r\n                aria-label=\"Table of content\"\r\n                ref={contentRef}\r\n                className={classNames(css.content, showContent && css['content--show'])}}\r\n            >\r\n                <ul className={css.scenes}>\r\n                    {Object.keys(titleMap).map(key => (\r\n                        <li key={key}>\r\n                            <button\r\n                                data-key={key}\r\n                                type=\"button\"\r\n                                onPointerDown={handleScene}\r\n                            >\r\n                                {titleMap[key].name}\r\n                            </button>\r\n                            <ul className={css.cameras}>\r\n                                {currentScene === key && (\r\n                                    Object.keys(titleMap[key]?.sub).map(key2 => (\r\n                                        <li key={key2}>\r\n                                            <button\r\n                                                data-key={key2}\r\n                                                type=\"button\"\r\n                                                onPointerDown={handleCamera}\r\n                                            >\r\n                                                - {titleMap[key]?.sub[key2].name}\r\n                                            </button>\r\n                                        </li>\r\n                                    )\r\n                                ))}\r\n                            </ul>\r\n                        </li>\r\n                    ))}\r\n                    <li className={css.links}>\r\n                        <a href=\"https://github.com/LeonidGrr/leonidgrr.github.io\">\r\n                            GitHub\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div> */}\r\n            <div className={classNames(css.description, showDescription && css['description--show'])}>\r\n                <span aria-label=\"Description\">\r\n                    {showDescription}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Explore;"],"sourceRoot":""}