{"version":3,"sources":["webpack:///./components/Explore/Explore.module.css","webpack:///./routes/home/index.tsx","webpack:///./components/Header/index.tsx","webpack:///./components/Header/Header.module.css","webpack:///./components/Explore/index.tsx"],"names":["titleMap","name","header","sub","about","desc","screen","windows","Home","loader","useContext","Context3D","Header","props","className","css","Explore","showContent","setShowContent","useState","debug","setDebug","mode","setMode","SceneThemeMode","NIGHT","showDescription","setShowDescription","useEffect","updateState","m","data","split","window","addEventListener","removeEventListener","handleCamera","e","stopPropagation","key","currentTarget","dataset","postMessage","handleShowContent","useCallback","prev","handleDebug","handleDarkMode","nextMode","DAWN","DAY","handleHideDescription","explore","type","onClick","classNames","content","contentShow","scenes","Object","keys","map","onPointerDown","links","href","description","descriptionShow","dangerouslySetInnerHTML","__html","title","closeButton"],"mappings":"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","file":"route-home.chunk.f8e7a.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"explore\":\"explore__sC0To\",\"opacity_animation\":\"opacity_animation__cfcuz\",\"explore-separator\":\"explore-separator__YKfQ6\",\"width_animation\":\"width_animation__HFgqT\",\"content\":\"content__riTMf\",\"description\":\"description__rbxxy\",\"scenes\":\"scenes__zIShF\",\"contentShow\":\"contentShow__ddXxi\",\"descriptionShow\":\"descriptionShow__28FTC\",\"closeButton\":\"closeButton__nPq+M\",\"mode\":\"mode__MCtJ2\"};","import { FunctionComponent } from 'preact';\nimport { RoutableProps } from 'preact-router';\nimport { useContext } from 'preact/hooks';\nimport { Context3D } from '../../components/Context3D';\nimport Explore from '../../components/Explore';\nimport Header from '../../components/Header';\n\nexport type Config = {\n    name: string\n    header: string\n    sub: Record<string, {\n\t\tname: string\n\t\tdesc: string\n\t}>\n};\n\nconst titleMap: Config = {\n    name: 'My dev lair',\n    header: 'my dev lair',\n    sub: {\n\t\tabout: {\n\t\t\tname: 'About',\n\t\t\tdesc: `Hello! My name is Leonid. I am just humble programmer trying to learn something in a spare time.\\n This is little demo page. Feel free to tap and click around.`,\n\t\t},\n        screen: {\n\t\t\tname: 'Screen - ThreeJS render target',\n\t\t\tdesc: 'For now this is just an example of THREEJS render target...',\n\t\t},\n        windows: {\n\t\t\tname: 'Raindrops shader',\n\t\t\tdesc: 'I like rain.\\n To program this raindrops I used ThreeJS ShaderMaterial and custom fragment shader, partially based on <a href=\"https://www.shadertoy.com/view/ltffzl\">beautiful shadertoy by Heartfelt</a>.',\n\t\t},\n    },\n};\n\nconst Home: FunctionComponent<RoutableProps> = () => {\n\tconst { loader } = useContext(Context3D);\n\n\treturn (\n\t\t<>\n\t\t\t<Header header={titleMap.header} />\n\t\t\t<Explore\n\t\t\t\ttitleMap={titleMap}\n\t\t\t/>\n\t\t\t{loader}\n\t\t</>\n\t);\n};\n\nexport default Home;\n","import css from './Header.module.css';\n\ntype HeaderProps = {\n    header: string,\n};\n\nconst Header = (props: HeaderProps) => {\n    const { header } = props;\n    return (\n        <header className={css.header}>\n            <h1>{header}</h1>\n        </header>\n    );\n};\n\nexport default Header;","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header__pBWgD\",\"opacity_animation\":\"opacity_animation__piEyb\",\"width_animation\":\"width_animation__rwi1z\"};","import {\n    useState,\n    useEffect,\n    useCallback,\n} from 'preact/hooks';\nimport classNames from 'classnames';\nimport css from './Explore.module.css';\nimport { Config } from 'src/routes/home';\nimport { SceneThemeMode } from '../3D/components/Scene';\n\ntype ExplorePanelProps = {\n    titleMap: Config,\n}\n\nconst Explore = (props: ExplorePanelProps) => {\n    const {\n        titleMap,\n    } = props;\n    const [showContent, setShowContent] = useState(false);\n    const [debug, setDebug] = useState(false);\n    const [mode, setMode] = useState<Omit<SceneThemeMode, SceneThemeMode.FREE>>(SceneThemeMode.NIGHT);\n    const [showDescription, setShowDescription] = useState<string | null>(titleMap.sub.about.desc);\n\n    useEffect(() => {\n        const updateState = (m: MessageEvent<string>) => {\n            if (typeof m.data === 'string') {\n                const data = m.data.split(':');\n                if (data[0] === 'change_camera_from_webgl') {\n                    setShowDescription(titleMap.sub[data[1]]?.desc);\n                }\n            }\n        };\n    \n        window.addEventListener('message', updateState);\n\n        return () => {\n            window.removeEventListener('message', updateState);\n        };\n    }, []);\n\n    const handleCamera = (e: any) => {\n        e.stopPropagation();\n        const { key } = e.currentTarget.dataset;\n        if (key && showDescription !== key) {\n            postMessage(`change_camera_from_dom:${key}`);\n            setShowDescription(titleMap.sub[key]?.desc);\n            setShowContent(false);\n        }\n    };\n\n    const handleShowContent = useCallback(() => {\n        setShowContent(prev => !prev);\n    }, []);\n\n    const handleDebug = useCallback(() => {\n        setDebug(prev => {\n            postMessage(`debug:${!prev}`);\n            return !prev;\n        });\n        handleShowContent();\n    }, []);\n\n    const handleDarkMode = useCallback(() => {\n        setMode(prev => {\n            let nextMode = prev;\n            if (prev === SceneThemeMode.NIGHT) {\n                nextMode = SceneThemeMode.DAWN;\n            }\n            if (prev === SceneThemeMode.DAWN) {\n                nextMode = SceneThemeMode.DAY;\n            }\n            if (prev === SceneThemeMode.DAY) {\n                nextMode = SceneThemeMode.NIGHT;\n            }\n            postMessage(`mode:${nextMode}`);\n            return nextMode;\n        });\n        handleShowContent();\n    }, []);\n\n    const handleHideDescription = useCallback(() => {\n        setShowDescription(null);\n    }, []);\n\n    return (\n        <>\n            <div\n                aria-label=\"Explore more\"\n                className={css.explore}\n            >\n                <div className={css['explore-separator']} />\n                <button type=\"button\" onClick={handleShowContent}>\n                    Explore more\n                </button>\n            </div>\n            <div\n                aria-label=\"Table of content\"\n                className={classNames(css.content, showContent && css.contentShow)}\n            >\n                <ul className={css.scenes}>\n                    {Object.keys(titleMap.sub).map((key: string) => (\n                        <li key={key}>\n                            <button\n                                data-key={key}\n                                type=\"button\"\n                                onPointerDown={handleCamera}\n                            >\n                                {titleMap.sub[key].name}\n                            </button>\n                        </li>\n                    ))}\n                    \n                    <li className={css.links}>\n                        <button\n                            type=\"button\"\n                            onPointerDown={handleDarkMode}\n                        >\n                            Theme&nbsp;\n                            <span className={classNames(css.mode)}>{mode}</span>\n                        </button>\n                    </li>\n            \n                    <li className={css.links}>\n                        <button\n                            type=\"button\"\n                            onPointerDown={handleDebug}\n                        >\n                            Debug&nbsp;\n                            {debug\n                                ? <span className={classNames(debug && css.mode)}>ON</span>\n                                : <span className={classNames(!debug && css.mode)}>OFF</span>}\n                        </button>\n                    </li>\n\n                    <li className={css.links}>\n                        <a href=\"https://github.com/LeonidGrr/leonidgrr.github.io\">\n                            GitHub\n                        </a>\n                    </li>\n                </ul>\n            </div>\n            <div className={classNames(css.description, showDescription && css.descriptionShow)} > \n                <span aria-label=\"Description\" dangerouslySetInnerHTML={{ __html: showDescription || '' }} />\n                <button title=\"Close\" className={css.closeButton} onClick={handleHideDescription}>&#10799;</button>\n            </div>\n        </>\n    );\n};\n\nexport default Explore;"],"sourceRoot":""}